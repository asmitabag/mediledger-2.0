// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

/**
 * @title MockVerifier
 * @dev Mock ZK-SNARK verifier for testing purposes
 * 
 * This contract simulates a ZK-SNARK verifier for testing when the real
 * Verifier.sol (generated by snarkjs) is not available. It always returns
 * true for proof verification to allow testing of contract logic.
 * 
 * WARNING: This is for testing only and should NEVER be used in production.
 */
contract MockVerifier {
    /**
     * @dev Mock proof verification that always returns true
     * @param a First component of the proof (ignored in mock)
     * @param b Second component of the proof (ignored in mock)
     * @param c Third component of the proof (ignored in mock)
     * @param input Public inputs (ignored in mock)
     * @return Always returns true for testing
     */
    function verifyProof(
        uint[2] memory a,
        uint[2][2] memory b,
        uint[2] memory c,
        uint[] memory input
    ) public pure returns (bool) {
        // Silence unused parameter warnings
        a; b; c; input;
        
        // Always return true for testing
        return true;
    }
}